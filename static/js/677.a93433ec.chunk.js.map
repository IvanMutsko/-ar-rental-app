{"version":3,"file":"static/js/677.a93433ec.chunk.js","mappings":"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","sources":["components/CardItem/CardItem.styled.jsx","components/CardItem/CardItem.jsx","components/CardsList/CardsList.styled.jsx","components/CardsList/CardsList.jsx","components/FilterBar/FilterBar.styled.jsx","components/FilterBar/FilterBar.jsx","pages/CatalogPage/CatalogPage.styled.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CardWrap = styled.div`\n  display: flex;\n  width: 274px;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n\n  margin-bottom: 21px;\n`;\n\nexport const CardSubwrap = styled.div`\n  margin-bottom: 28px;\n`;\n\nexport const ImageWrap = styled.div`\n  position: relative;\n  width: 274px;\n  min-height: 268px;\n  margin-bottom: 14px;\n\n  overflow: hidden;\n\n  border-radius: 14px;\n  background: linear-gradient(\n      180deg,\n      rgba(18, 20, 23, 0.5) 2.5%,\n      rgba(18, 20, 23, 0) 41.07%\n    ),\n    #f3f3f2;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n\n  object-fit: cover;\n`;\n\nexport const AddFavoriteButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  background-color: transparent;\n  border: none;\n\n  & .icon {\n    width: 18px;\n    height: 18px;\n    stroke: #fff;\n    fill: transparent;\n\n    &:hover,\n    &:focus {\n      stroke: #3470ff;\n      fill: #3470ff;\n    }\n\n    &.favorite {\n      stroke: #3470ff;\n      fill: #3470ff;\n    }\n  }\n`;\n\nexport const TitleWrap = styled.div`\n  width: 265px;\n`;\n\nexport const DescriptionWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: space-between;\n\n  color: #121417;\n  font-family: Manrope;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.5;\n\n  & .make {\n    display: inline-block;\n  }\n\n  & .accent {\n    color: #3470ff;\n  }\n\n  & .price {\n    padding-left: 12px;\n    display: inline-block;\n  }\n`;\n\nexport const Description = styled.p`\n  color: rgba(18, 20, 23, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.5;\n`;\n\nexport const CardButton = styled.button`\n  display: flex;\n  width: 274px;\n  height: 44px;\n  padding: 12px;\n  justify-content: center;\n  align-items: center;\n\n  border-color: transparent;\n\n  border-radius: 12px;\n  background: #3470ff;\n\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.43;\n\n  &:hover,\n  &:focus {\n    background: #0b44cd;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport {\n  CardWrap,\n  CardSubwrap,\n  ImageWrap,\n  Image,\n  AddFavoriteButton,\n  DescriptionWrap,\n  TitleWrap,\n  Title,\n  Description,\n  CardButton,\n} from './CardItem.styled';\n\nimport icon from '../../images/sprite.svg';\n\nexport const CardItem = ({ cardData, toggleModal, setCurrentCar }) => {\n  const [isFavorite, setIsFavorite] = useState('');\n\n  const {\n    id,\n    address,\n    rentalCompany,\n    type,\n    model,\n    mileage,\n    functionalities,\n    img,\n    make,\n    rentalPrice,\n    year,\n  } = cardData;\n\n  const randomIndex = Math.floor(Math.random() * functionalities.length);\n\n  const descrArr = [\n    address.split(', ')[1],\n    address.split(', ')[2],\n    rentalCompany,\n    type,\n    model,\n    mileage,\n    functionalities[randomIndex],\n  ];\n\n  const getFavoriteCars = () => {\n    const favoriteCarsString = localStorage.getItem('favoriteCars');\n    return favoriteCarsString ? JSON.parse(favoriteCarsString) : [];\n  };\n\n  const addFavorite = id => {\n    const favoriteCars = getFavoriteCars();\n    const indexOfId = favoriteCars.indexOf(id);\n\n    if (indexOfId !== -1) {\n      favoriteCars.splice(indexOfId, 1);\n      setIsFavorite('');\n    } else {\n      favoriteCars.push(id);\n      setIsFavorite('favorite');\n    }\n\n    localStorage.setItem('favoriteCars', JSON.stringify(favoriteCars));\n  };\n\n  useEffect(() => {\n    const favoriteCars = getFavoriteCars();\n    const indexOfId = favoriteCars.indexOf(id);\n    setIsFavorite(indexOfId !== -1 ? 'favorite' : '');\n  }, [id]);\n\n  return (\n    <CardWrap>\n      <CardSubwrap>\n        <ImageWrap>\n          <Image src={img} alt={`${make} ${model}`}></Image>\n          <AddFavoriteButton type=\"button\" onClick={() => addFavorite(id)}>\n            <svg className={`icon ${isFavorite}`}>\n              <use href={`${icon}#icon-heart`}></use>\n            </svg>\n          </AddFavoriteButton>\n        </ImageWrap>\n        <DescriptionWrap>\n          <TitleWrap>\n            <Title>\n              <span className=\"make\">\n                {make} <span className=\"accent\">{model}</span>, {year}\n              </span>\n              <span className=\"price\">{rentalPrice}</span>\n            </Title>\n          </TitleWrap>\n          <Description>{descrArr.join(' | ')}</Description>\n        </DescriptionWrap>\n      </CardSubwrap>\n      <CardButton\n        type=\"button\"\n        onClick={() => {\n          toggleModal();\n          setCurrentCar(cardData);\n        }}\n      >\n        Learn more\n      </CardButton>\n    </CardWrap>\n  );\n};\n\nCardItem.propTypes = {\n  cardData: PropTypes.object.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  setCurrentCar: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 29px;\n\n  margin-bottom: 79px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardItem } from '../CardItem/CardItem';\nimport { Container } from './CardsList.styled';\n\nexport const CardsList = ({ catalog, toggleModal, setCurrentCar }) => {\n  const [newCatalog, setNewCatalog] = useState([]);\n\n  useEffect(() => {\n    setNewCatalog(catalog);\n  }, [catalog]);\n\n  return (\n    <Container>\n      {newCatalog.map(card => {\n        return (\n          <CardItem\n            key={card.id}\n            cardData={card}\n            toggleModal={toggleModal}\n            setCurrentCar={setCurrentCar}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nCardsList.propTypes = {\n  catalog: PropTypes.array.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  setCurrentCar: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.form`\n  display: flex;\n  width: 859px;\n  height: 74px;\n  align-items: flex-end;\n  gap: 18px;\n\n  margin-bottom: 50px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n\n  & .range-wrap {\n    display: flex;\n  }\n`;\n\nexport const Label = styled.label`\n  color: #8a8a89;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.28;\n`;\n\nexport const SelectContainer = styled.div`\n  position: relative;\n\n  & .icon {\n    position: absolute;\n    right: 18px;\n    top: 14px;\n\n    width: 20px;\n    height: 20px;\n\n    pointer-events: none;\n\n    &:hover,\n    &:focus {\n      background-color: red;\n    }\n  }\n`;\n\nexport const Select = styled.select`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n\n  height: 48px;\n\n  border-radius: 14px;\n  background: #f7f7fb;\n  border-color: transparent;\n  appearance: none;\n\n  color: #121417;\n  font-size: 18px;\n  font-weight: 500;\n\n  &#brand {\n    padding: 14px 18px;\n    width: 224px;\n  }\n\n  &#price {\n    padding: 14px 18px;\n    width: 125px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n\n  border-radius: 14px;\n  background: #f7f7fb;\n  border-color: transparent;\n\n  color: #121417;\n  font-size: 18px;\n  font-weight: 500;\n\n  &#mileage {\n    width: 160px;\n    height: 48px;\n    padding: 14px 24px 14px 24px;\n\n    border-radius: 14px 0px 0px 14px;\n    border-right: 1px solid rgba(138, 138, 137, 0.2);\n    background: #f7f7fb;\n  }\n\n  &#endMileage {\n    width: 160px;\n    height: 48px;\n    padding: 14px 24px 14px 24px;\n\n    border-radius: 0px 14px 14px 0px;\n    background: #f7f7fb;\n  }\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  width: 136px;\n  height: 48px;\n  padding: 14px 44px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  border-color: transparent;\n  background: #3470ff;\n\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.43;\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport makes from '../../data/makes.json';\nimport priceRange from '../../data/price.json';\nimport icon from '../../images/sprite.svg';\nimport {\n  Container,\n  InputWrap,\n  Label,\n  Input,\n  Select,\n  SelectContainer,\n  FilterButton,\n} from './FilterBar.styled';\n\nexport const FilterBar = ({ filterValues, filterFn }) => {\n  const [brandSelectOpen, setBrandSelectOpen] = useState(false);\n  const [priceSelectOpen, setPriceSelectOpen] = useState(false);\n\n  const filterData = e => {\n    e.preventDefault();\n\n    const { brand, price, mileage, endMileage } = e.target;\n\n    const values = {\n      make: brand.value,\n      rentalPrice: Number(price.value.trim()),\n      minMileage: Number(mileage.value.trim()),\n      maxMileage: Number(endMileage.value.trim()),\n    };\n\n    filterValues(values);\n  };\n\n  const brandElement = document.getElementById('brand');\n\n  brandElement?.addEventListener('focus', () => {\n    setBrandSelectOpen(true);\n  });\n\n  brandElement?.addEventListener('change', () => {\n    setBrandSelectOpen(false);\n  });\n\n  const priceElement = document.getElementById('price');\n\n  priceElement?.addEventListener('focus', () => {\n    setPriceSelectOpen(true);\n  });\n\n  priceElement?.addEventListener('change', () => {\n    setPriceSelectOpen(false);\n  });\n\n  return (\n    <Container onSubmit={filterData}>\n      <InputWrap>\n        <Label htmlFor=\"brand\">Car brand</Label>\n        <SelectContainer>\n          <Select id=\"brand\">\n            {makes.map(make => (\n              <option\n                key={make}\n                className=\"options-list\"\n                value={make !== 'All' ? make : ''}\n              >\n                {make}\n              </option>\n            ))}\n          </Select>\n          <svg className=\"icon\">\n            <use\n              href={`${icon}${\n                brandSelectOpen ? '#icon-chevron-top' : '#icon-chevron-down'\n              }`}\n            ></use>\n          </svg>\n        </SelectContainer>\n      </InputWrap>\n      <InputWrap>\n        <Label htmlFor=\"price\">Price/ 1 hour</Label>\n        <SelectContainer>\n          <Select id=\"price\">\n            {priceRange.map(value => (\n              <option\n                key={value}\n                className=\"options-list\"\n                value={value !== '' ? value : ''}\n              >\n                To {value}$\n              </option>\n            ))}\n          </Select>\n          <svg className=\"icon\">\n            <use\n              href={`${icon}${\n                priceSelectOpen ? '#icon-chevron-top' : '#icon-chevron-down'\n              }`}\n            ></use>\n          </svg>\n        </SelectContainer>\n      </InputWrap>\n      <InputWrap>\n        <Label htmlFor=\"mileage\">Сar mileage / km</Label>\n        <div className=\"range-wrap\">\n          <Input type=\"text\" id=\"mileage\" placeholder=\"From\" />\n          <Input type=\"text\" id=\"endMileage\" placeholder=\"To\" />\n        </div>\n      </InputWrap>\n      <FilterButton>Search</FilterButton>\n    </Container>\n  );\n};\n\nFilterBar.propTypes = {\n  filterValues: PropTypes.func.isRequired,\n  filterFn: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 50px 128px 150px 128px;\n`;\n\nexport const LoadButton = styled.button`\n  color: #3470ff;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  text-decoration-line: underline;\n  padding: 0 20px;\n\n  border: none;\n  background-color: transparent;\n\n  &:hover,\n  &:focus {\n    color: #0b44cd;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { CardsList } from '../../components/CardsList/CardsList';\nimport { FilterBar } from '../../components/FilterBar/FilterBar';\nimport { Container, LoadButton } from './CatalogPage.styled';\n\nexport default function CatalogPage({\n  setFilterValues,\n  filter,\n  catalog,\n  visibleItems,\n  loadMoreItems,\n  toggleModal,\n  setCurrentCar,\n}) {\n  return (\n    <Container>\n      <FilterBar filterValues={setFilterValues} filterFn={filter} />\n      <CardsList\n        catalog={catalog.slice(0, visibleItems)}\n        toggleModal={toggleModal}\n        setCurrentCar={setCurrentCar}\n      />\n      <LoadButton type=\"button\" onClick={loadMoreItems}>\n        Load more\n      </LoadButton>\n    </Container>\n  );\n}\n\nCatalogPage.propTypes = {\n  setFilterValues: PropTypes.func.isRequired,\n  filter: PropTypes.func.isRequired,\n  catalog: PropTypes.array.isRequired,\n  visibleItems: PropTypes.number.isRequired,\n  loadMoreItems: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  setCurrentCar: PropTypes.func.isRequired,\n};\n"],"names":["CardWrap","styled","_templateObject","_taggedTemplateLiteral","CardSubwrap","_templateObject2","ImageWrap","_templateObject3","Image","_templateObject4","AddFavoriteButton","_templateObject5","TitleWrap","_templateObject6","DescriptionWrap","_templateObject7","Title","_templateObject8","Description","_templateObject9","CardButton","_templateObject10","CardItem","_ref","cardData","toggleModal","setCurrentCar","_useState","useState","_useState2","_slicedToArray","isFavorite","setIsFavorite","id","address","rentalCompany","type","model","mileage","functionalities","img","make","rentalPrice","year","randomIndex","Math","floor","random","length","descrArr","split","getFavoriteCars","favoriteCarsString","localStorage","getItem","JSON","parse","useEffect","indexOfId","indexOf","_jsxs","children","_jsx","src","alt","concat","onClick","favoriteCars","splice","push","setItem","stringify","addFavorite","className","href","icon","join","Container","CardsList","catalog","newCatalog","setNewCatalog","map","card","InputWrap","Label","SelectContainer","Select","Input","FilterButton","FilterBar","filterValues","filterFn","brandSelectOpen","setBrandSelectOpen","_useState3","_useState4","priceSelectOpen","setPriceSelectOpen","brandElement","document","getElementById","addEventListener","priceElement","onSubmit","e","preventDefault","_e$target","target","brand","price","endMileage","values","value","Number","trim","minMileage","maxMileage","htmlFor","makes","priceRange","placeholder","LoadButton","CatalogPage","setFilterValues","filter","visibleItems","loadMoreItems","slice"],"sourceRoot":""}