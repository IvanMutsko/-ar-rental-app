{"version":3,"file":"static/js/677.2ad80b4c.chunk.js","mappings":"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","sources":["helpers/getFavoritesCars.js","components/CardItem/CardItem.styled.jsx","components/CardItem/CardItem.jsx","helpers/toggleFavoriteCars.js","components/CardsList/CardsList.styled.jsx","components/CardsList/CardsList.jsx","components/FilterBar/FilterBar.styled.jsx","components/FilterBar/FilterBar.jsx","pages/CatalogPage/CatalogPage.styled.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["export const getFavoriteCars = () => {\n  const favoriteCarsString = localStorage.getItem('favoriteCars');\n  return favoriteCarsString ? JSON.parse(favoriteCarsString) : [];\n};\n","import styled from 'styled-components';\n\nexport const CardWrap = styled.div`\n  display: flex;\n  width: 274px;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: space-between;\n\n  margin-bottom: 21px;\n`;\n\nexport const CardSubwrap = styled.div`\n  margin-bottom: 28px;\n`;\n\nexport const ImageWrap = styled.div`\n  position: relative;\n  width: 274px;\n  min-height: 268px;\n  margin-bottom: 14px;\n\n  overflow: hidden;\n\n  border-radius: 14px;\n  background: linear-gradient(\n      180deg,\n      rgba(18, 20, 23, 0.5) 2.5%,\n      rgba(18, 20, 23, 0) 41.07%\n    ),\n    #f3f3f2;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  height: 100%;\n  width: 100%;\n\n  object-fit: cover;\n`;\n\nexport const AddFavoriteButton = styled.button`\n  position: absolute;\n  top: 14px;\n  right: 14px;\n\n  background-color: transparent;\n  border: none;\n\n  & .icon {\n    width: 18px;\n    height: 18px;\n    stroke: #fff;\n    fill: transparent;\n\n    &:hover,\n    &:focus {\n      stroke: #3470ff;\n      fill: #3470ff;\n    }\n\n    &.favorite {\n      stroke: #3470ff;\n      fill: #3470ff;\n    }\n  }\n`;\n\nexport const TitleWrap = styled.div`\n  width: 265px;\n`;\n\nexport const DescriptionWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nexport const Title = styled.h2`\n  display: flex;\n  justify-content: space-between;\n\n  color: #121417;\n  font-family: Manrope;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.5;\n\n  & .make {\n    display: inline-block;\n  }\n\n  & .accent {\n    color: #3470ff;\n  }\n\n  & .price {\n    padding-left: 12px;\n    display: inline-block;\n  }\n`;\n\nexport const Description = styled.p`\n  color: rgba(18, 20, 23, 0.5);\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.5;\n`;\n\nexport const CardButton = styled.button`\n  display: flex;\n  width: 274px;\n  height: 44px;\n  padding: 12px;\n  justify-content: center;\n  align-items: center;\n\n  border-color: transparent;\n\n  border-radius: 12px;\n  background: #3470ff;\n\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-style: normal;\n  font-weight: 600;\n  line-height: 1.43;\n\n  &:hover,\n  &:focus {\n    background: #0b44cd;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\n\nimport icon from '../../images/sprite.svg';\nimport { getFavoriteCars } from '../../helpers/getFavoritesCars';\nimport { addFavorite } from '../../helpers/toggleFavoriteCars';\n\nimport {\n  CardWrap,\n  CardSubwrap,\n  ImageWrap,\n  Image,\n  AddFavoriteButton,\n  DescriptionWrap,\n  TitleWrap,\n  Title,\n  Description,\n  CardButton,\n} from './CardItem.styled';\n\nexport const CardItem = ({ cardData, toggleModal, setCurrentCar }) => {\n  const [isFavorite, setIsFavorite] = useState('');\n\n  const {\n    id,\n    address,\n    rentalCompany,\n    type,\n    model,\n    mileage,\n    functionalities,\n    img,\n    make,\n    rentalPrice,\n    year,\n  } = cardData;\n\n  const randomIndex = Math.floor(Math.random() * functionalities.length);\n\n  const descrArr = [\n    address.split(', ')[1],\n    address.split(', ')[2],\n    rentalCompany,\n    type,\n    model,\n    mileage,\n    functionalities[randomIndex],\n  ];\n\n  useEffect(() => {\n    const favoriteCars = getFavoriteCars();\n    const indexOfId = favoriteCars.indexOf(id);\n    setIsFavorite(indexOfId !== -1 ? 'favorite' : '');\n  }, [id]);\n\n  return (\n    <CardWrap>\n      <CardSubwrap>\n        <ImageWrap>\n          <Image src={img} alt={`${make} ${model}`}></Image>\n          <AddFavoriteButton\n            type=\"button\"\n            onClick={() => addFavorite(id, getFavoriteCars, setIsFavorite)}\n          >\n            <svg className={`icon ${isFavorite}`}>\n              <use href={`${icon}#icon-heart`}></use>\n            </svg>\n          </AddFavoriteButton>\n        </ImageWrap>\n        <DescriptionWrap>\n          <TitleWrap>\n            <Title>\n              <span className=\"make\">\n                {make} <span className=\"accent\">{model}</span>, {year}\n              </span>\n              <span className=\"price\">{rentalPrice}</span>\n            </Title>\n          </TitleWrap>\n          <Description>{descrArr.join(' | ')}</Description>\n        </DescriptionWrap>\n      </CardSubwrap>\n      <CardButton\n        type=\"button\"\n        onClick={() => {\n          toggleModal();\n          setCurrentCar(cardData);\n        }}\n      >\n        Learn more\n      </CardButton>\n    </CardWrap>\n  );\n};\n\nCardItem.propTypes = {\n  cardData: PropTypes.object.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  setCurrentCar: PropTypes.func.isRequired,\n};\n","export const addFavorite = (id, getFavoriteCars, setIsFavorite) => {\n  const favoriteCars = getFavoriteCars();\n  const indexOfId = favoriteCars.indexOf(id);\n\n  if (indexOfId !== -1) {\n    favoriteCars.splice(indexOfId, 1);\n    setIsFavorite('');\n  } else {\n    favoriteCars.push(id);\n    setIsFavorite('favorite');\n  }\n\n  localStorage.setItem('favoriteCars', JSON.stringify(favoriteCars));\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 29px;\n\n  margin-bottom: 79px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { CardItem } from '../CardItem/CardItem';\nimport { Container } from './CardsList.styled';\n\nexport const CardsList = ({ catalog, toggleModal, setCurrentCar }) => {\n  const [newCatalog, setNewCatalog] = useState([]);\n\n  useEffect(() => {\n    setNewCatalog(catalog);\n  }, [catalog]);\n\n  return (\n    <Container>\n      {newCatalog.map(card => {\n        return (\n          <CardItem\n            key={card.id}\n            cardData={card}\n            toggleModal={toggleModal}\n            setCurrentCar={setCurrentCar}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nCardsList.propTypes = {\n  catalog: PropTypes.array.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  setCurrentCar: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.form`\n  display: flex;\n  width: 859px;\n  height: 74px;\n  align-items: flex-end;\n  gap: 18px;\n\n  margin-bottom: 50px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const InputWrap = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 8px;\n\n  & .range-wrap {\n    display: flex;\n  }\n`;\n\nexport const Label = styled.label`\n  color: #8a8a89;\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.28;\n`;\n\nexport const SelectContainer = styled.div`\n  position: relative;\n\n  & .icon {\n    position: absolute;\n    right: 18px;\n    top: 14px;\n\n    width: 20px;\n    height: 20px;\n\n    pointer-events: none;\n\n    &:hover,\n    &:focus {\n      background-color: red;\n    }\n  }\n`;\n\nexport const Select = styled.select`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n\n  height: 48px;\n\n  border-radius: 14px;\n  background: #f7f7fb;\n  border-color: transparent;\n  appearance: none;\n\n  color: #121417;\n  font-size: 18px;\n  font-weight: 500;\n\n  &#brand {\n    padding: 14px 18px;\n    width: 224px;\n  }\n\n  &#price {\n    padding: 14px 18px;\n    width: 125px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n\n  border-radius: 14px;\n  background: #f7f7fb;\n  border-color: transparent;\n\n  color: #121417;\n  font-size: 18px;\n  font-weight: 500;\n\n  &#mileage {\n    width: 160px;\n    height: 48px;\n    padding: 14px 24px 14px 24px;\n\n    border-radius: 14px 0px 0px 14px;\n    border-right: 1px solid rgba(138, 138, 137, 0.2);\n    background: #f7f7fb;\n  }\n\n  &#endMileage {\n    width: 160px;\n    height: 48px;\n    padding: 14px 24px 14px 24px;\n\n    border-radius: 0px 14px 14px 0px;\n    background: #f7f7fb;\n  }\n`;\n\nexport const FilterButton = styled.button`\n  display: flex;\n  width: 136px;\n  height: 48px;\n  padding: 14px 44px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 12px;\n  border-color: transparent;\n  background: #3470ff;\n\n  color: #fff;\n  font-family: Manrope;\n  font-size: 14px;\n  font-weight: 600;\n  line-height: 1.43;\n\n  &:hover,\n  &:focus {\n    background-color: #0b44cd;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nimport makes from '../../data/makes.json';\nimport priceRange from '../../data/price.json';\nimport icon from '../../images/sprite.svg';\nimport {\n  Container,\n  InputWrap,\n  Label,\n  Input,\n  Select,\n  SelectContainer,\n  FilterButton,\n} from './FilterBar.styled';\n\nexport const FilterBar = ({ filterValues, filterFn }) => {\n  const [brandSelectOpen, setBrandSelectOpen] = useState(false);\n  const [priceSelectOpen, setPriceSelectOpen] = useState(false);\n\n  const filterData = e => {\n    e.preventDefault();\n\n    const { brand, price, mileage, endMileage } = e.target;\n\n    const values = {\n      make: brand.value,\n      rentalPrice: Number(price.value.trim()),\n      minMileage: Number(mileage.value.trim()),\n      maxMileage: Number(endMileage.value.trim()),\n    };\n\n    filterValues(values);\n  };\n\n  const handleBrandSelectFocus = () => {\n    setBrandSelectOpen(true);\n  };\n\n  const handleBrandSelectChange = () => {\n    setBrandSelectOpen(false);\n  };\n\n  const handlePriceSelectFocus = () => {\n    setPriceSelectOpen(true);\n  };\n\n  const handlePriceSelectChange = () => {\n    setPriceSelectOpen(false);\n  };\n\n  return (\n    <Container onSubmit={filterData}>\n      <InputWrap>\n        <Label htmlFor=\"brand\">Car brand</Label>\n        <SelectContainer>\n          <Select\n            id=\"brand\"\n            onFocus={handleBrandSelectFocus}\n            onChange={handleBrandSelectChange}\n          >\n            {makes.map(make => (\n              <option\n                key={make}\n                className=\"options-list\"\n                value={make !== 'All' ? make : ''}\n              >\n                {make}\n              </option>\n            ))}\n          </Select>\n          <svg className=\"icon\">\n            <use\n              href={`${icon}${\n                brandSelectOpen ? '#icon-chevron-top' : '#icon-chevron-down'\n              }`}\n            ></use>\n          </svg>\n        </SelectContainer>\n      </InputWrap>\n      <InputWrap>\n        <Label htmlFor=\"price\">Price/ 1 hour</Label>\n        <SelectContainer>\n          <Select\n            id=\"price\"\n            onFocus={handlePriceSelectFocus}\n            onChange={handlePriceSelectChange}\n          >\n            {priceRange.map(value => (\n              <option\n                key={value}\n                className=\"options-list\"\n                value={value !== '' ? value : ''}\n              >\n                To {value}$\n              </option>\n            ))}\n          </Select>\n          <svg className=\"icon\">\n            <use\n              href={`${icon}${\n                priceSelectOpen ? '#icon-chevron-top' : '#icon-chevron-down'\n              }`}\n            ></use>\n          </svg>\n        </SelectContainer>\n      </InputWrap>\n      <InputWrap>\n        <Label htmlFor=\"mileage\">Сar mileage / km</Label>\n        <div className=\"range-wrap\">\n          <Input type=\"text\" id=\"mileage\" placeholder=\"From\" />\n          <Input type=\"text\" id=\"endMileage\" placeholder=\"To\" />\n        </div>\n      </InputWrap>\n      <FilterButton>Search</FilterButton>\n    </Container>\n  );\n};\n\nFilterBar.propTypes = {\n  filterValues: PropTypes.func.isRequired,\n  filterFn: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  padding: 50px 128px 150px 128px;\n`;\n\nexport const LoadButton = styled.button`\n  color: #3470ff;\n  font-family: Manrope;\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.5;\n  text-decoration-line: underline;\n  padding: 0 20px;\n\n  border: none;\n  background-color: transparent;\n\n  &:hover,\n  &:focus {\n    color: #0b44cd;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { CardsList } from '../../components/CardsList/CardsList';\nimport { FilterBar } from '../../components/FilterBar/FilterBar';\nimport { Container, LoadButton } from './CatalogPage.styled';\n\nexport default function CatalogPage({\n  setFilterValues,\n  filter,\n  catalog,\n  visibleItems,\n  loadMoreItems,\n  toggleModal,\n  setCurrentCar,\n}) {\n  return (\n    <Container>\n      <FilterBar filterValues={setFilterValues} filterFn={filter} />\n      <CardsList\n        catalog={catalog.slice(0, visibleItems)}\n        toggleModal={toggleModal}\n        setCurrentCar={setCurrentCar}\n      />\n      <LoadButton type=\"button\" onClick={loadMoreItems}>\n        Load more\n      </LoadButton>\n    </Container>\n  );\n}\n\nCatalogPage.propTypes = {\n  setFilterValues: PropTypes.func.isRequired,\n  filter: PropTypes.func.isRequired,\n  catalog: PropTypes.array.isRequired,\n  visibleItems: PropTypes.number.isRequired,\n  loadMoreItems: PropTypes.func.isRequired,\n  toggleModal: PropTypes.func.isRequired,\n  setCurrentCar: PropTypes.func.isRequired,\n};\n"],"names":["getFavoriteCars","favoriteCarsString","localStorage","getItem","JSON","parse","CardWrap","styled","_templateObject","_taggedTemplateLiteral","CardSubwrap","_templateObject2","ImageWrap","_templateObject3","Image","_templateObject4","AddFavoriteButton","_templateObject5","TitleWrap","_templateObject6","DescriptionWrap","_templateObject7","Title","_templateObject8","Description","_templateObject9","CardButton","_templateObject10","CardItem","_ref","cardData","toggleModal","setCurrentCar","_useState","useState","_useState2","_slicedToArray","isFavorite","setIsFavorite","id","address","rentalCompany","type","model","mileage","functionalities","img","make","rentalPrice","year","randomIndex","Math","floor","random","length","descrArr","split","useEffect","indexOfId","indexOf","_jsxs","children","_jsx","src","alt","concat","onClick","favoriteCars","splice","push","setItem","stringify","addFavorite","className","href","icon","join","Container","CardsList","catalog","newCatalog","setNewCatalog","map","card","InputWrap","Label","SelectContainer","Select","Input","FilterButton","FilterBar","filterValues","filterFn","brandSelectOpen","setBrandSelectOpen","_useState3","_useState4","priceSelectOpen","setPriceSelectOpen","onSubmit","e","preventDefault","_e$target","target","brand","price","endMileage","values","value","Number","trim","minMileage","maxMileage","htmlFor","onFocus","onChange","makes","priceRange","placeholder","LoadButton","CatalogPage","setFilterValues","filter","visibleItems","loadMoreItems","slice"],"sourceRoot":""}